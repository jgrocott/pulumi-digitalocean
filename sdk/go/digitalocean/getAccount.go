// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information on your DigitalOcean account.
//
// ## Example Usage
//
// Get the account:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := digitalocean.GetAccount(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAccount(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAccountResult
	err := ctx.Invoke("digitalocean:index/getAccount:getAccount", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getAccount.
type GetAccountResult struct {
	// The total number of droplets current user or team may have active at one time.
	DropletLimit int `pulumi:"dropletLimit"`
	// The email address used by the current user to register for DigitalOcean.
	Email string `pulumi:"email"`
	// If true, the user has verified their account via email. False otherwise.
	EmailVerified bool `pulumi:"emailVerified"`
	// The total number of floating IPs the current user or team may have.
	FloatingIpLimit int `pulumi:"floatingIpLimit"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// This value is one of "active", "warning" or "locked".
	Status string `pulumi:"status"`
	// A human-readable message giving more details about the status of the account.
	StatusMessage string `pulumi:"statusMessage"`
	// The unique universal identifier for the current user.
	Uuid string `pulumi:"uuid"`
}
